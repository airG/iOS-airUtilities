{"Protocols/DynamicTypeResponsive.html#/s:12airUtilities21DynamicTypeResponsiveP010respondsTocD7ChangesSbv":{"name":"respondsToDynamicTypeChanges","abstract":"<p>Sets if the view should redraw and update font size based on a set TextStyle, when the user changes their Dynamic Type setting.</p>","parent_name":"DynamicTypeResponsive"},"Protocols/DynamicTypeResponsive.html":{"name":"DynamicTypeResponsive","abstract":"<p>Classes that conform to this protocol allow responding to dynamic text changes on iOS 9 and lower</p>"},"Functions/+=(_:_:).html#/s:12airUtilities2peoiys10DictionaryVyxq_Gz_AEts8HashableRzr0_lF1KL_xmfp":{"name":"K","parent_name":"+=(_:_:)"},"Functions.html#/s:12airUtilities21startNetworkIndicatoryyF":{"name":"startNetworkIndicator()","abstract":"<p>Starts spinning the network indicator, dispatches to the main thread.</p>"},"Functions.html#/s:12airUtilities20stopNetworkIndicatoryyF":{"name":"stopNetworkIndicator()","abstract":"<p>Stops spinning the network indicator, dispatches to the main thread.</p>"},"Functions/+=(_:_:).html":{"name":"+=(_:_:)","abstract":"<p>Update left dictionary with keys, values from right</p>"},"Functions.html#/s:12airUtilities3Logys5Error_pSg_AA0C5LevelO2asSS4fileSS8functionSi4linetF":{"name":"Log(_:as:file:function:line:)","abstract":"<p>Log an error to the console. Assumes level: minimumErrorLogLevel unless other level is specified.</p>"},"Functions.html#/s:12airUtilities3LogySSSg_AA0C5LevelO2asSS4fileSS8functionSi4linetF":{"name":"Log(_:as:file:function:line:)","abstract":"<p>Logs a message to the console. Assumes level: minimumLogLevel unless other level is specified.</p>"},"Extensions/Array.html#/s:Sa12airUtilitiess9EquatableRzlE14appendIfUniqueyxF":{"name":"appendIfUnique(_:)","abstract":"<p>Append iff <code>!self.contains(newElement)</code></p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa12airUtilitiess9EquatableRzlE20appendUniqueContentsySayxG2of_tF":{"name":"appendUniqueContents(of:)","abstract":"<p>Appends each element iff <code>!self.contains(newElement)</code></p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa12airUtilitiess9EquatableRzlE14uniqueContentsSayxGAD2of_tF":{"name":"uniqueContents(of:)","abstract":"<p>Returns an array of Elements not included in self</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa12airUtilitiess9EquatableRzlE11uniqueCountSiSayxG4from_tF":{"name":"uniqueCount(from:)","abstract":"<p>Returns count of unique elements</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa12airUtilitiess9EquatableRzlE13removeElementyxF":{"name":"removeElement(_:)","abstract":"<p>Removes element if it exists in self</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa12airUtilitiesE9subscriptxSgSu4safe_tci":{"name":"subscript(safe:)","abstract":"<p>Safely subscripts an array, returning nil if index is out of bounds</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa12airUtilitiesE9subscriptxSgSi4safe_tci":{"name":"subscript(safe:)","abstract":"<p>Safely subscripts an array, returning nil if index is out of bounds</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa12airUtilitiesE2atxSgSu4safe_tF":{"name":"at(safe:)","abstract":"<p>Safely subscripts an array, returning nil if index is out of bounds</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa12airUtilitiesE2atxSgSi4safe_tF":{"name":"at(safe:)","abstract":"<p>Safely subscripts an array, returning nil if index is out of bounds</p>","parent_name":"Array"},"Extensions/URL.html#/s:s26ExpressibleByStringLiteralPx0cD4TypeQz06stringD0_tcfc":{"name":"init(stringLiteral:)","parent_name":"URL"},"Extensions/URL.html#/s:s33ExpressibleByUnicodeScalarLiteralPx0cdE4TypeQz07unicodedE0_tcfc":{"name":"init(unicodeScalarLiteral:)","parent_name":"URL"},"Extensions/URL.html#/s:s43ExpressibleByExtendedGraphemeClusterLiteralPx0cdeF4TypeQz08extendeddeF0_tcfc":{"name":"init(extendedGraphemeClusterLiteral:)","parent_name":"URL"},"Extensions/UIStackView.html#/c:@CM@airUtilities@@objc(cs)UIStackView(im)removeAllArrangedSubviews":{"name":"removeAllArrangedSubviews()","abstract":"<p>Removes all arranged subviews in <code>self.arrangedSubviews</code></p>","parent_name":"UIStackView"},"Extensions/UIView.html#/c:@CM@airUtilities@@objc(cs)UIView(im)fillWith:":{"name":"fill(with:)","abstract":"<p>Fill self with the provided view.</p>","parent_name":"UIView"},"Extensions/UIView.html#/c:@CM@airUtilities@@objc(cs)UIView(im)constrainSizeWithWidth:height:":{"name":"constrainSize(width:height:)","abstract":"<p>Constrain size of self to a specific width and height.</p>","parent_name":"UIView"},"Extensions/UIView.html#/c:@CM@airUtilities@@objc(cs)UIView(im)constrainHeightTo:":{"name":"constrainHeight(to:)","abstract":"<p>Constrain height of self.</p>","parent_name":"UIView"},"Extensions/UIView.html#/c:@CM@airUtilities@@objc(cs)UIView(im)constrainWidthTo:":{"name":"constrainWidth(to:)","abstract":"<p>Constrain width of self.</p>","parent_name":"UIView"},"Extensions/UIView.html#/c:@CM@airUtilities@@objc(cs)UIView(im)centerOn:":{"name":"center(on:)","abstract":"<p>Align centerX and centerY of <code>view</code> to <code>self</code>.</p>","parent_name":"UIView"},"Extensions/UIView.html#/c:@CM@airUtilities@@objc(cs)UIView(cpy)Nib":{"name":"Nib","abstract":"<p>Gets the <code>UINib</code> named <code>self.Identifier</code></p>","parent_name":"UIView"},"Extensions/UIView.html#/c:@CM@airUtilities@@objc(cs)UIView(cpy)Identifier":{"name":"Identifier","abstract":"<p>The string representation of <code>self</code></p>","parent_name":"UIView"},"Extensions/UIView.html#/c:@CM@airUtilities@@objc(cs)UIView(im)roundWithCorners:radius:borderColor:":{"name":"round(corners:radius:borderColor:)","abstract":"<p>Applies a rounded mask and matching border to a view</p>","parent_name":"UIView"},"Extensions/UIImage.html#/c:@CM@airUtilities@@objc(cs)UIImage(im)getPixelColorAt:":{"name":"getPixelColor(at:)","abstract":"<p>Get the color of a specific pixel in an image. Source: <a href=\"http://stackoverflow.com/a/25956283/2580195\">http://stackoverflow.com/a/25956283/2580195</a></p>","parent_name":"UIImage"},"Extensions/UICollectionView.html#/s:So16UICollectionViewC12airUtilitiesE11registerNibyxm2of_tSo0aB4CellCRbzlF":{"name":"registerNib(of:)","abstract":"<p>Registers <code>type.Nib</code> for <code>type.Identifier</code></p>","parent_name":"UICollectionView"},"Extensions/UICollectionView.html#/s:So16UICollectionViewC12airUtilitiesE13registerClassyxm2of_tSo0aB4CellCRbzlF":{"name":"registerClass(of:)","abstract":"<p>Registers <code>type</code> for <code>type.Identifier</code></p>","parent_name":"UICollectionView"},"Extensions/UICollectionView.html#/s:So16UICollectionViewC12airUtilitiesE11dequeueCellx10Foundation9IndexPathV3for_tSo0abF0CRbzlF":{"name":"dequeueCell(for:)","abstract":"<p>Dequeues a cell of type <code>T</code> for reuseIdentifier <code>T.Identifier</code></p>","parent_name":"UICollectionView"},"Extensions/UICollectionView.html#/s:So16UICollectionViewC12airUtilitiesE11registerNibyxm2of_SS016forSupplementaryB6OfKindtSo0a8ReusableB0CRbzlF":{"name":"registerNib(of:forSupplementaryViewOfKind:)","abstract":"<p>Registers <code>type.Nib</code> for <code>type.Identifier</code></p>","parent_name":"UICollectionView"},"Extensions/UICollectionView.html#/s:So16UICollectionViewC12airUtilitiesE13registerClassyxm2of_SS016forSupplementaryB6OfKindtSo0a8ReusableB0CRbzlF":{"name":"registerClass(of:forSupplementaryViewOfKind:)","abstract":"<p>Registers <code>type</code> for <code>type.Identifier</code></p>","parent_name":"UICollectionView"},"Extensions/UICollectionView.html#/s:So16UICollectionViewC12airUtilitiesE020dequeueSupplementaryB0xSS2of_10Foundation9IndexPathV3fortSo0a8ReusableB0CRbzlF":{"name":"dequeueSupplementaryView(of:for:)","abstract":"<p>Dequeues a reusableView of type <code>T</code> for reuseIdentifier <code>T.Identifier</code></p>","parent_name":"UICollectionView"},"Extensions/UICollectionView.html#/c:@CM@airUtilities@@objc(cs)UICollectionView(im)indexPathForVisibleFullSizeCell":{"name":"indexPathForVisibleFullSizeCell()","abstract":"<p>Returns the indexPath of the one visible collection view cell. Designed for use in <code>scrollViewDidEndDecelerating</code>.</p>","parent_name":"UICollectionView"},"Extensions/NSString.html#/c:@CM@airUtilities@@objc(cs)NSString(im)rangesOf:options:":{"name":"ranges(of:options:)","abstract":"<p>Function to return an array of <code>NSRange</code>s for <code>substring</code> in <code>self</code>. Searches the string from index 0, so <code>ranges(of: ).first</code> will be the first <code>NSRange</code> in the string.","parent_name":"NSString"},"Extensions/Optional.html#/s:Sq12airUtilitiesSSRszlE12isNilOrEmptySbv":{"name":"isNilOrEmpty","abstract":"<p>Returns true if <code>self</code> is either nil or an empty string</p>","parent_name":"Optional"},"Extensions/UITableView.html#/s:So11UITableViewC12airUtilitiesE11registerNibyxm2of_tSo0aB4CellCRbzlF":{"name":"registerNib(of:)","abstract":"<p>Registers <code>type.Nib</code> for <code>type.Identifier</code></p>","parent_name":"UITableView"},"Extensions/UITableView.html#/s:So11UITableViewC12airUtilitiesE13registerClassyxm2of_tSo0aB4CellCRbzlF":{"name":"registerClass(of:)","abstract":"<p>Registers <code>type</code> for <code>type.Identifier</code></p>","parent_name":"UITableView"},"Extensions/UITableView.html#/s:So11UITableViewC12airUtilitiesE11dequeueCellx10Foundation9IndexPathV3for_tSo0abF0CRbzlF":{"name":"dequeueCell(for:)","abstract":"<p>Dequeues a cell of type <code>T</code> for reuseIdentifier <code>T.Identifier</code></p>","parent_name":"UITableView"},"Extensions/UITableView.html#/s:So11UITableViewC12airUtilitiesE11registerNibyxm2of_tSo0ab12HeaderFooterB0CRbzlF":{"name":"registerNib(of:)","abstract":"<p>Registers <code>type.Nib</code> for <code>type.Identifier</code></p>","parent_name":"UITableView"},"Extensions/UITableView.html#/s:So11UITableViewC12airUtilitiesE13registerClassyxm2of_tSo0ab12HeaderFooterB0CRbzlF":{"name":"registerClass(of:)","abstract":"<p>Registers <code>type</code> for <code>type.Identifier</code></p>","parent_name":"UITableView"},"Extensions/UITableView.html#/s:So11UITableViewC12airUtilitiesE019dequeueHeaderFooterB0xySo0abfgB0CRbzlF":{"name":"dequeueHeaderFooterView()","abstract":"<p>Dequeues a headerFooterView of type <code>T</code> for reuseIdentifier <code>T.Identifier</code></p>","parent_name":"UITableView"},"Extensions/UITableView.html#/c:@CM@airUtilities@@objc(cs)UITableView(im)hasRowFor:":{"name":"hasRow(for:)","abstract":"<p>Checks if the provided indexPath represents a row in the tableview</p>","parent_name":"UITableView"},"Extensions/UIWindow.html#/c:@CM@airUtilities@@objc(cs)UIWindow(py)topMostController":{"name":"topMostController","abstract":"<p>Tries to find the topmost presented view controller</p>","parent_name":"UIWindow"},"Extensions/UIViewController.html#/c:@CM@airUtilities@@objc(cs)UIViewController(cpy)Nib":{"name":"Nib","abstract":"<p>Gets the <code>UINib</code> named <code>self.Identifier</code></p>","parent_name":"UIViewController"},"Extensions/UIViewController.html#/c:@CM@airUtilities@@objc(cs)UIViewController(cpy)Identifier":{"name":"Identifier","abstract":"<p>The string representation of <code>self</code></p>","parent_name":"UIViewController"},"Extensions/UIViewController.html#/c:@CM@airUtilities@@objc(cs)UIViewController(im)dismissSelf":{"name":"dismissSelf()","abstract":"<p>If presented by navigation controller, pops self, otherwise dismisses self.</p>","parent_name":"UIViewController"},"Extensions/UIViewController.html#/c:@CM@airUtilities@@objc(cs)UIViewController(im)adaptKeyboardTo:constraint:":{"name":"adaptKeyboard(to:constraint:)","abstract":"<p>Animates a constraint based on <code>Notification.Name.UIKeyboardWillChangeFrame</code> notification.</p>","parent_name":"UIViewController"},"Extensions/UIFontDescriptor.html#/c:@CM@airUtilities@@objc(cs)UIFontDescriptor(py)textStyle":{"name":"textStyle","abstract":"<p>Tries to return the UIFontTextStyle based on NSCTFontUIUsageAttribute and hardcoded String names</p>","parent_name":"UIFontDescriptor"},"Extensions/UIFont.html#/c:@CM@airUtilities@@objc(cs)UIFont(py)textStyle":{"name":"textStyle","abstract":"<p>Convenience, returns <code>self.fontDescriptor.textStyle</code></p>","parent_name":"UIFont"},"Extensions/UITextField.html#/c:@CM@airUtilities@@objc(cs)UITextField(py)respondsToDynamicTypeChanges":{"name":"respondsToDynamicTypeChanges","abstract":"<p>A boolean indicating if the text should live adjust size based on the user&rsquo;s dynamic text setting changing.</p>","parent_name":"UITextField"},"Extensions/UITextField.html#/c:@CM@airUtilities@@objc(cs)UITextField(py)isTextEmpty":{"name":"isTextEmpty","abstract":"<p>Returns value of <code>self.text.isEmpty</code></p>","parent_name":"UITextField"},"Extensions/UITextView.html#/c:@CM@airUtilities@@objc(cs)UITextView(py)respondsToDynamicTypeChanges":{"name":"respondsToDynamicTypeChanges","abstract":"<p>A boolean indicating if the text should live adjust size based on the user&rsquo;s dynamic text setting changing.</p>","parent_name":"UITextView"},"Extensions/UILabel.html#/c:@CM@airUtilities@@objc(cs)UILabel(py)respondsToDynamicTypeChanges":{"name":"respondsToDynamicTypeChanges","abstract":"<p>A boolean indicating if the text should live adjust size based on the user&rsquo;s dynamic text setting changing.</p>","parent_name":"UILabel"},"Extensions/UIDevice.html#/c:@CM@airUtilities@@objc(cs)UIDevice(cpy)isSimulator":{"name":"isSimulator","abstract":"<p>Check if we are currently running in a simulator based on the architecture</p>","parent_name":"UIDevice"},"Extensions/IndexPath.html#/s:10Foundation9IndexPathV12airUtilitiesE13nextInSectionACyF":{"name":"nextInSection()","abstract":"<p>Returns an <code>IndexPath</code> of <code>self.row + 1</code></p>","parent_name":"IndexPath"},"Extensions/IndexPath.html#/s:10Foundation9IndexPathV12airUtilitiesE17previousInSectionACyF":{"name":"previousInSection()","abstract":"<p>Returns an <code>IndexPath</code> of <code>self.row - 1</code>.</p>","parent_name":"IndexPath"},"Extensions/UIButton.html#/c:@CM@airUtilities@@objc(cs)UIButton(im)handle:with:":{"name":"handle(_:with:)","abstract":"<p>Closure based event handling for <code>UIButton</code>. <code>Handler</code> will be called when the button receives an event of type <code>event</code>.</p>","parent_name":"UIButton"},"Extensions/UIButton.html#/c:@CM@airUtilities@@objc(cs)UIButton(im)addWithHandler:for:":{"name":"add(handler:for:)","abstract":"<p>Closure based event handling for <code>UIButton</code>. <code>Handler</code> will be called when the button receives an event of type <code>event</code>.</p>","parent_name":"UIButton"},"Extensions/UIButton.html#/c:@CM@airUtilities@@objc(cs)UIButton(py)respondsToDynamicTypeChanges":{"name":"respondsToDynamicTypeChanges","abstract":"<p>A boolean indicating if the titleLabel.text should live adjust size based on the user&rsquo;s dynamic text setting changing.</p>","parent_name":"UIButton"},"Extensions/UIButton.html":{"name":"UIButton"},"Extensions/IndexPath.html":{"name":"IndexPath"},"Extensions/UIDevice.html":{"name":"UIDevice"},"Extensions/UILabel.html":{"name":"UILabel"},"Extensions/UITextView.html":{"name":"UITextView"},"Extensions/UITextField.html":{"name":"UITextField"},"Extensions/UIFont.html":{"name":"UIFont"},"Extensions/UIFontDescriptor.html":{"name":"UIFontDescriptor"},"Extensions/UIViewController.html":{"name":"UIViewController"},"Extensions/UIWindow.html":{"name":"UIWindow"},"Extensions/UITableView.html":{"name":"UITableView"},"Extensions/Optional.html":{"name":"Optional"},"Extensions/NSString.html":{"name":"NSString"},"Extensions/UICollectionView.html":{"name":"UICollectionView"},"Extensions/UIImage.html":{"name":"UIImage"},"Extensions/UIView.html":{"name":"UIView"},"Extensions/UIStackView.html":{"name":"UIStackView"},"Extensions/URL.html":{"name":"URL"},"Extensions/Array.html":{"name":"Array"},"Enums/LogLevel.html#/s:12airUtilities8LogLevelO5errorA2CmF":{"name":"error","abstract":"<p>Error</p>","parent_name":"LogLevel"},"Enums/LogLevel.html#/s:12airUtilities8LogLevelO7warningA2CmF":{"name":"warning","abstract":"<p>Warning</p>","parent_name":"LogLevel"},"Enums/LogLevel.html#/s:12airUtilities8LogLevelO4infoA2CmF":{"name":"info","abstract":"<p>Info</p>","parent_name":"LogLevel"},"Enums/LogLevel.html#/s:12airUtilities8LogLevelO5debugA2CmF":{"name":"debug","abstract":"<p>Debug</p>","parent_name":"LogLevel"},"Enums/LogLevel.html#/s:12airUtilities8LogLevelO7verboseA2CmF":{"name":"verbose","abstract":"<p>Verbose</p>","parent_name":"LogLevel"},"Enums/Result.html#/s:12airUtilities6ResultO7successACyxq_GxcAEmr0_lF":{"name":"success","abstract":"<p>Success with associated value <code>T</code></p>","parent_name":"Result"},"Enums/Result.html#/s:12airUtilities6ResultO7failureACyxq_Gq_cAEmr0_lF":{"name":"failure","abstract":"<p>Failure with associated value <code>U</code></p>","parent_name":"Result"},"Enums/Result.html#/s:12airUtilities6ResultO11descriptionSSv":{"name":"description","abstract":"<p>String description of the result</p>","parent_name":"Result"},"Enums/Result.html#/s:12airUtilities6ResultO16debugDescriptionSSv":{"name":"debugDescription","abstract":"<p>String description of the result</p>","parent_name":"Result"},"Enums/Result.html#/s:12airUtilities6ResultOACyxq_GSgxSg5value_q_Sg5errortcfc":{"name":"init(value:error:)","abstract":"<p>Init with two optional values Useful to convert UIKit APIs that return a <code>(T?, Error?)</code> into a Result type.</p>","parent_name":"Result"},"Enums/Result.html":{"name":"Result","abstract":"<p>A generic type of either .success(T), or .failure(U)</p>"},"Enums/LogLevel.html":{"name":"LogLevel","abstract":"<p>Provides possible levels to print as, and set for filtering</p>"},"Global Variables.html#/s:12airUtilities15minimumLogLevelAA0dE0Ov":{"name":"minimumLogLevel","abstract":"<p>Logging will ignore any messages below this level. Set this anywhere to change the default.</p>"},"Global Variables.html#/s:12airUtilities20minimumErrorLogLevelAA0eF0Ov":{"name":"minimumErrorLogLevel","abstract":"<p>When passing an Error, logging assumes you want to log it as .error. Set this anywhere to change the default.</p>"},"Global Variables.html":{"name":"Global Variables","abstract":"<p>The following global variables are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"}}